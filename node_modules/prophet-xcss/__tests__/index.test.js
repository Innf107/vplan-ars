const xcss = require('../index')
const express = require('express')
const url = require('url')
const request = require('request')
const util = require('util')
const pGet = util.promisify(request.get)

it('should return statusCode 200 if the file exists', done => {
    const app = express()
    app.use(xcss(['__tests__']))
    const server = app.listen(8080, () => {
        request.get('http://localhost:8080/test.css', (err, res, body) => {
            expect(res.statusCode).toBe(200)
            server.close()
            done()
        })
    })
})

it('should return statusCode 404 if the file does not exist', done => {
    const app = express()
    app.use(xcss(['__tests__']))
    const server = app.listen(8080, () => {
        request.get('http://localhost:8080/doesntexist.css', (err, res, body) => {
            expect(res.statusCode).toBe(404)
            server.close()
            done()
        })
    })
})

it('should not run any additional middleware if the file exists', done => {
    const app = express()
    app.use(xcss(['__tests__']))
    app.use((req, res, next) => {
        fail('called additional middleware!')
        next()
    })
    const server = app.listen(8080, () => {
        request.get('http://localhost:8080/test.css', (err, res, body) => {
            server.close()
            done()
        })
    })
})

it('should run additional middleware if the file does not exist', done => {
    const app = express()
    app.use(xcss(['__tests__']))
    app.use((req, res, next) => {
        done()
        next()
    })
    const server = app.listen(8080, () => {
        request.get('http://localhost:8080/doesnotexist.css', (err, res, body) => {
            server.close()
        })
    })
})